---
import Layout from "@/layouts/Layout.astro"
import { getAllArticles, getArticleDetail } from "@/lib/client"

import hljs from "highlight.js"
import type { HighlightResult } from "highlight.js"
import { load } from "cheerio"
import "highlight.js/styles/atom-one-dark.min.css"

export async function getStaticPaths() {
  const response = await getAllArticles({ fields: ["id"] })
  return response.contents.map((content) => ({
    params: {
      articleId: content.id,
    },
  }))
}

const { articleId } = Astro.params
const articleDetail = await getArticleDetail(articleId!)

// --- シンタックスハイライト適用 ---
// cf. https://codeseterpie.com/blog/e91oc4aaef58/
const cheerioObj = load(articleDetail.context)

cheerioObj("div[data-filename]").each((_, elm) => {
  // data-filename属性の値を持つspanを
  // <div data-filename="{入力したファイル名}">の最初の子要素として追加
  cheerioObj(elm).prepend(
    `<span>${cheerioObj(elm).attr("data-filename")}</span>`,
  )
})

cheerioObj("pre code").each((_, elm) => {
  const lang = cheerioObj(elm).attr("class")
  let result: HighlightResult

  if (lang) {
    result = hljs.highlight(cheerioObj(elm).text(), {
      language: lang.replace("language-", ""),
    })
  } else {
    // 言語が選択されていない場合は自動判定
    result = hljs.highlightAuto(cheerioObj(elm).text())
  }
  cheerioObj(elm).html(result.value)
  cheerioObj(elm).addClass("hljs")
})

articleDetail.context = cheerioObj.html()
---

<Layout>
  <article>
    <h1>{articleDetail.title}</h1>
    <div class="flex flex-row-reverse">
      {articleDetail.publishedAt?.split("T")[0] || ""}
    </div>
    <hr class="my-4 bg-indigo-600 h-[2px]" />
    <div set:html={articleDetail.context} />
  </article>
</Layout>
